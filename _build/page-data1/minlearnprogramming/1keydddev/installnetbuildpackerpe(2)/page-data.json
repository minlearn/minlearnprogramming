{"componentChunkName":"component---src-templates-docs-js","path":"/minlearnprogramming/1keydddev/installnetbuildpackerpe(2)","result":{"data":{"site":{"siteMetadata":{"title":"docs | minlearn","docsLocation":"https://github.com/minlearn/minlearnprogramming/tree/master/_build"}},"mdx":{"fields":{"id":"f2569a29-1754-55a5-ae77-5e82cf046b6d","title":"installnetbuildpackerpe(2)","slug":"/minlearnprogramming/1keydddev/installnetbuildpackerpe(2)"},"body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"installnetbuildpackerpe(2)\",\n  \"metaTitle\": null,\n  \"metaDescription\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"\\u628ADI\\u5F53online packer\\u7528:\\u5229\\u7528installnet\\u5236\\u4F5C\\u4E00\\u4E2A\\u4E91\\u88C5\\u673Apackerpe\\uFF082\\uFF09\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u672C\\u6587\\u5173\\u952E\\u5B57\\uFF1A\\u81EA\\u5EFAudeb\\u7AD9\\u955C\\u50CF\\u3002local repository debian installer preseed,Preseed install from local repository,start http server in a preseed file,debian\\u4E2D\\u7528NC+SHELL\\u5B9E\\u73B0\\u7684\\u4E00\\u4E2Aweb\\u670D\\u52A1,\\u6D4F\\u89C8\\u5668\\u88C5\\u673A,Preseed failed with exit 2,d-i preseed/early_command string stuck hang,linux grep -o \\u53EA\\u5339\\u914D\\u5B57\\u4E32\")), mdx(\"p\", null, \"\\u7EE7\\u628ADebianinstaller\\u5F53online packer\\u7528\\u6587\\u7AE01\\uFF0C\\u672C\\u6587\\u7EE7\\u7EED\\u8BB2\\u89E3\\u751F\\u6210packerpe\\u3002\"), mdx(\"h2\", null, \"\\u7ED9\\u524D\\u9762\\u7684\\u811A\\u672C\\u589E\\u52A0\\u548C\\u955C\\u50CF\\u683C\\u5F0F\\u5224\\u65AD\\uFF0C\\u7EDF\\u4E00wget\\u548Cdd progress\"), mdx(\"p\", null, \"\\u589E\\u5F3A\\u4E3B\\u8981\\u662F\\u4E3A\\u4E86pipecmdstr\\u5904\\u6574\\u5408\\uFF0C\\u7A0D\\u540E\\u4F1A\\u770B\\u5230(\\u56E0\\u6B64\\u4E5F\\u987A\\u4FBF\\u652F\\u6301\\u4E86onelist,oneindex\\u8FD9\\u79CD\\u7F51\\u76D8\\u5916\\u94FE\\u4F5C\\u4E3Addurl\\u5730\\u5740\\uFF0C\\u5176\\u5B9E\\u8D28\\u662F302\\u8DF3\\u8F6C\\u4F53)\\u3002\\u8FD9\\u6BB5\\u66FF\\u6362\\u524D\\u6587\\u7684cd /tmp/boot;\\u5230echo -e \\\"Downloading kernel : ${LinuxMirror}/....../debian-installer/amd64/initrd.gz\\\"\\u95F4\\u7684\\u5185\\u5BB9\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"LIBC6_SUPPORT='pool/main/g/glibc/libc6_2.28-10_amd64.deb'\\ndeclare -A SHARED_SUPPORT\\nSHARED_SUPPORT=(\\n[\\\"webfs1\\\"]=\\\"pool/main/g/gnutls28/libgnutls30_3.6.7-4+deb10u3_amd64.deb\\\"\\n[\\\"webfs2\\\"]=\\\"pool/main/p/p11-kit/libp11-kit0_0.23.15-2_amd64.deb\\\"\\n[\\\"webfs3\\\"]=\\\"pool/main/libt/libtasn1-6/libtasn1-6_4.13-3_amd64.deb\\\"\\n[\\\"webfs4\\\"]=\\\"pool/main/n/nettle/libnettle6_3.4.1-1_amd64.deb\\\"\\n[\\\"webfs5\\\"]=\\\"pool/main/n/nettle/libhogweed4_3.4.1-1_amd64.deb\\\"\\n[\\\"webfs6\\\"]=\\\"pool/main/g/gmp/libgmp10_6.1.2+dfsg-4_amd64.deb\\\"\\n\\n[\\\"webfs7\\\"]=\\\"pool/main/libf/libffi/libffi6_3.2.1-9_amd64.deb\\\"\\n[\\\"webfs8\\\"]=\\\"pool/main/m/mime-support/mime-support_3.62_all.deb\\\"\\n[\\\"webfs9\\\"]=\\\"pool/main/libu/libunistring/libunistring2_0.9.10-1_amd64.deb\\\"\\n\\n[\\\"wgetssl7\\\"]=\\\"pool/main/libi/libidn2/libidn2-0_2.0.5-1+deb10u1_amd64.deb\\\"\\n[\\\"wgetssl8\\\"]=\\\"pool/main/libp/libpsl/libpsl5_0.20.2-2_amd64.deb\\\"\\n[\\\"wgetssl9\\\"]=\\\"pool/main/p/pcre2/libpcre2-8-0_10.32-5_amd64.deb\\\"\\n[\\\"wgetssl10\\\"]=\\\"pool/main/u/util-linux/libuuid1_2.33.1-0.1_amd64.deb\\\"\\n[\\\"wgetssl11\\\"]=\\\"pool/main/z/zlib/zlib1g_1.2.11.dfsg-1_amd64.deb\\\"\\n)\\n\\nHTTPD_SUPPORT='pool/main/w/webfs/webfs_1.21+ds1-12_amd64.deb'\\nWGETSSL_SUPPORT='pool/main/w/wget/wget_1.20.1-1.1_amd64.deb'\\nDDPROGRESS_SUPPORT='pool/main/b/busybox/busybox_1.30.1-4_amd64.deb'\\nUNZIP=''\\nDDURL=''\\n\\n[[ -n \\\"$LIBC6_SUPPORT\\\" ]] && {\\n  echo -ne 'Add libc6 support(binary-amd64/Package)...'\\n\\n  wget --no-check-certificate -qO ${LIBC6_SUPPORT##*/} $LinuxMirror/$LIBC6_SUPPORT; \\\\\\n  ar x ${LIBC6_SUPPORT##*/} data.tar.xz; xz -d data.tar.xz; tar xf data.tar; \\\\\\n  rm -rf data.tar ${LIBC6_SUPPORT##*/}\\n\\n  [[ ! -f  /tmp/boot/lib/x86_64-linux-gnu/libc.so.6 ]] && echo 'Error! LIBC6_SUPPORT.' && exit 1 || sleep 3s && echo -en \\\"[\\\\033[32mok\\\\033[0m]\\\\n\\\" ;\\n  # [[ $? -eq '0' ]] && echo -ne 'Success! \\\\n\\\\n'\\n}\\n\\n[[ -n \\\"$HTTPD_SUPPORT\\\" ]] && {\\n  echo -ne 'Add httpd and httpd shared support(binary-amd64/Package)...'\\n\\n  wget --no-check-certificate -qO ${HTTPD_SUPPORT##*/} $LinuxMirror/$HTTPD_SUPPORT; \\\\\\n  ar x ${HTTPD_SUPPORT##*/} data.tar.xz; xz -d data.tar.xz; tar xf data.tar; \\\\\\n  rm -rf data.tar ${HTTPD_SUPPORT##*/}\\n\\n  for pkg in $(echo \\\"${!SHARED_SUPPORT[@]}\\\" |sed 's/\\\\ /\\\\n/g' |sort -n |grep \\\"^webfs\\\")\\n    do\\n      CurPkg=\\\"${SHARED_SUPPORT[$pkg]}\\\"\\n      [ -n \\\"$CurPkg\\\" ] || continue\\n\\n      wget --no-check-certificate -qO ${CurPkg##*/} $LinuxMirror/$CurPkg; \\\\\\n      ar x ${CurPkg##*/} data.tar.xz; xz -d data.tar.xz; tar xf data.tar; \\\\\\n      rm -rf data.tar ${CurPkg##*/}\\n    done\\n\\n  [[ ! -f  /tmp/boot/usr/bin/webfsd ]] && echo 'Error! HTTPD_SUPPORT.' && exit 1 || sleep 3s && echo -en \\\"[\\\\033[32mok\\\\033[0m]\\\\n\\\" ;\\n  # [[ $? -eq '0' ]] && echo -ne 'Success! \\\\n\\\\n'\\n}\\n\\nif [[ -n \\\"$tmpDDURL\\\" ]]; then\\n  echo -ne 'setting final ddurl and prepare unzip mode...'\\n  echo \\\"$tmpDDURL\\\" |grep -q '^http://\\\\|^ftp://\\\\|^https://';\\n  [[ $? -ne '0' ]] && echo 'No valid URL in the DD argument,Only support http://, ftp:// and https:// !' && exit 1;\\n\\n  IMGHEADER=\\\"$(curl -Is \\\"$tmpDDURL\\\")\\\";\\n  IMGTYPE=\\\"$(echo \\\"$IMGHEADER\\\" | grep -E -o 'raw|qcow2|gzip|x-gzip|301|302')\\\" || IMGTYPE='0';\\n# [[ \\\"$IMGTYPE\\\" -ne '0' ]] && echo 'not a raw,tar,gunzip or 301/302 ref file, exit ... !' && exit 1 || {\\n\\n    [[ \\\"$IMGTYPE\\\" == 'raw' ]] && UNZIP='0' && DDURL=\\\"$tmpDDURL\\\" && sleep 3s && echo -en \\\"[\\\\033[32m raw \\\\033[0m]\\\\n\\\";\\n    [[ \\\"$IMGTYPE\\\" == 'qcow2' ]] && UNZIP='0' && DDURL=\\\"$tmpDDURL\\\" && sleep 3s && echo -en \\\"[\\\\033[32m raw \\\\033[0m]\\\\n\\\";\\n    [[ \\\"$IMGTYPE\\\" == 'gzip' ]] && UNZIP='1' && DDURL=\\\"$tmpDDURL\\\" && sleep 3s && echo -en \\\"[\\\\033[32m gzip \\\\033[0m]\\\\n\\\";\\n    [[ \\\"$IMGTYPE\\\" == 'x-gzip' ]] && UNZIP='1' && DDURL=\\\"$tmpDDURL\\\" && sleep 3s && echo -en \\\"[\\\\033[32m x-gzip \\\\033[0m]\\\\n\\\";\\n    [[ \\\"$IMGTYPE\\\" == 'gunzip' ]] && UNZIP='2' && DDURL=\\\"$tmpDDURL\\\" && sleep 3s && echo -en \\\"[\\\\033[32m gunzip \\\\033[0m]\\\\n\\\";\\n\\n    [[ \\\"$IMGTYPE\\\" == '302' ]] && IMGHEADERCHECKPASS2=\\\"$(echo \\\"$IMGHEADER\\\" |grep 'Location: http'|sed 's/Location: //g')\\\" && IMGHEADERCHECKPASS2=${IMGHEADERCHECKPASS2%$'\\\\r'} && IMGHEADERCHECKPASS3=\\\"$(curl -Is \\\"$IMGHEADERCHECKPASS2\\\" |grep 'content-location: http'|sed 's/content-location: //g')\\\" && IMGHEADERCHECKPASS3=${IMGHEADERCHECKPASS3%$'\\\\r'} && IMGTYPECHECKPASS2=\\\"$(curl -Is \\\"$IMGHEADERCHECKPASS3\\\" | grep -E -o 'raw|qcow2|gzip|x-gzip|gunzip')\\\" && {\\n      [[ \\\"$IMGTYPECHECKPASS2\\\" == 'raw' ]] && UNZIP='0' && DDURL=\\\"$tmpDDURL\\\" && sleep 3s && echo -en \\\"[\\\\033[32m raw \\\\033[0m]\\\\n\\\";\\n      [[ \\\"$IMGTYPECHECKPASS2\\\" == 'qcow2' ]] && UNZIP='0' && DDURL=\\\"$tmpDDURL\\\" && sleep 3s && echo -en \\\"[\\\\033[32m raw \\\\033[0m]\\\\n\\\";\\n      [[ \\\"$IMGTYPECHECKPASS2\\\" == 'gzip' ]] && UNZIP='1' && DDURL=\\\"$tmpDDURL\\\" && sleep 3s && echo -en \\\"[\\\\033[32m gzip \\\\033[0m]\\\\n\\\";\\n      [[ \\\"$IMGTYPECHECKPASS2\\\" == 'x-gzip' ]] && UNZIP='1' && DDURL=\\\"$tmpDDURL\\\" && sleep 3s && echo -en \\\"[\\\\033[32m x-gzip \\\\033[0m]\\\\n\\\";\\n      [[ \\\"$IMGTYPECHECKPASS2\\\" == 'gunzip' ]] && UNZIP='2' && DDURL=\\\"$tmpDDURL\\\" && sleep 3s && echo -en \\\"[\\\\033[32m gunzip \\\\033[0m]\\\\n\\\";\\n    }\\n\\n    [[ \\\"$IMGTYPE\\\" == '0' ]] && echo 'not a raw,tar,gunzip or 301/302 ref file, exit ... !' && exit 1;\\n# }\\n\\nelse\\n  echo 'Please input vaild image URL! ';\\n  exit 1;\\nfi\\n\\n#echo \\\"$DDURL\\\" |grep -q '^https://'\\n#[[ $? -eq '0' ]] && {\\n\\n  [[ -n \\\"$WGETSSL_SUPPORT\\\" ]] && {\\n    echo -ne 'always Add wgetssl and wgetssl support(binary-amd64/Package)...'\\n\\n    wget --no-check-certificate -qO ${WGETSSL_SUPPORT##*/} $LinuxMirror/$WGETSSL_SUPPORT; \\\\\\n    ar x ${WGETSSL_SUPPORT##*/} data.tar.xz; xz -d data.tar.xz; tar xf data.tar; \\\\\\n    rm -rf data.tar ${WGETSSL_SUPPORT##*/}; mv -f /tmp/boot/usr/bin/wget /tmp/boot/usr/bin/wget2\\n\\n    for pkg in $(echo \\\"${!SHARED_SUPPORT[@]}\\\" |sed 's/\\\\ /\\\\n/g' |sort -n |grep \\\"^wgetssl\\\")\\n      do\\n        CurPkg=\\\"${SHARED_SUPPORT[$pkg]}\\\"\\n        [ -n \\\"$CurPkg\\\" ] || continue\\n\\n        wget --no-check-certificate -qO ${CurPkg##*/} $LinuxMirror/$CurPkg; \\\\\\n        ar x ${CurPkg##*/} data.tar.xz; xz -d data.tar.xz; tar xf data.tar; \\\\\\n        rm -rf data.tar ${CurPkg##*/}\\n      done\\n\\n    [[ ! -f  /tmp/boot/usr/bin/wget2 ]] && echo 'Error! WGETSSL_SUPPORT.' && exit 1 || sleep 3s && echo -en \\\"[\\\\033[32mok\\\\033[0m]\\\\n\\\" ;\\n    # sed -i 's/wget\\\\ -qO-/\\\\/usr\\\\/bin\\\\/wget2\\\\ --no-check-certificate\\\\ --retry-connrefused\\\\ --tries=7\\\\ --continue\\\\ -qO-/g' /tmp/boot/preseed.cfg\\n    # [[ $? -eq '0' ]] && echo -ne 'Success! \\\\n\\\\n'\\n  }\\n    # || {\\n    # echo -ne 'Not wgetssl support package! \\\\n\\\\n';\\n    # exit 1;\\n    # }\\n#}\\n\\n[[ -n \\\"$DDPROGRESS_SUPPORT\\\" ]] && {\\n  echo -ne 'Add ddprogress support(binary-amd64/Package)...'\\n\\n  wget --no-check-certificate -qO ${DDPROGRESS_SUPPORT##*/} $LinuxMirror/$DDPROGRESS_SUPPORT; \\\\\\n  ar x ${DDPROGRESS_SUPPORT##*/} data.tar.xz; xz -d data.tar.xz; tar xf data.tar; \\\\\\n  rm -rf data.tar ${DDPROGRESS_SUPPORT##*/}\\n\\n  [[ ! -f  /tmp/boot/bin/busybox ]] && echo 'Error! DDPROGRESS_SUPPORT.' && exit 1 || sleep 3s && echo -en \\\"[\\\\033[32mok\\\\033[0m]\\\\n\\\" ;\\n  # [[ $? -eq '0' ]] && echo -ne 'Success! \\\\n\\\\n'\\n}\\n\")), mdx(\"p\", null, \"\\u5982\\u679C\\u4F60\\u53D1\\u73B0\\u542F\\u52A8\\u4E0D\\u4E86\\u6587\\u4EF6\\u7CFB\\u7EDF\\u51FA\\u73B0\\u5236\\u4F5C\\u6587\\u4EF6\\u7CFB\\u7EDF\\u65F6\\u51FA\\u73B0\\u7684\\u90A3\\u4E9B\\u9519\\u8BEF\\uFF0C\\u90A3\\u5C31\\u662F\\u53EF\\u80FDglibc\\u4F4E\\u4E86\\u3002\\u6CE8\\u610F\\u5230dd status progress\\u6211\\u5E76\\u672A\\u5728\\u63A5\\u4E0B\\u7684preseed\\u4E2D\\u7528\\u5230\\u3002\"), mdx(\"h2\", null, \"\\u6574\\u5408\\u7CBE\\u7B80\\u51E0\\u5927\\u4EF6,the net, the loader, the preseed file\"), mdx(\"p\", null, \"\\u4E0B\\u9762\\u662F\\u811A\\u672C\\u7684\\u7EE7\\u7EED,\\u51C6\\u5907net\\u8BBE\\u7F6E\\uFF0Cgrub loader\\u548Cpreseed file\\u4F9B\\u6253\\u5305\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sleep 5s\\n\\necho -e \\\"\\\\n\\\\033[36m# Preparing others\\\\033[0m\\\\n\\\"\\n\\necho -e \\\"the net\\\"\\n\\nsetNet='0'\\ninterface=''\\n\\n[ -n \\\"$ipAddr\\\" ] && [ -n \\\"$ipMask\\\" ] && [ -n \\\"$ipGate\\\" ] && setNet='1';\\n[[ -n \\\"$tmpWORD\\\" ]] && myPASSWORD=\\\"$(openssl passwd -1 \\\"$tmpWORD\\\")\\\";\\n[[ -z \\\"$myPASSWORD\\\" ]] && myPASSWORD='$1$4BJZaD0A$y1QykUnJ6mXprENfwpseH0';\\n\\nif [[ -n \\\"$interface\\\" ]]; then\\n  IFETH=\\\"$interface\\\"\\nelse\\n  IFETH=\\\"auto\\\"\\nfi\\n\\n[[ \\\"$setNet\\\" == '1' ]] && {\\n  IPv4=\\\"$ipAddr\\\";\\n  MASK=\\\"$ipMask\\\";\\n  GATE=\\\"$ipGate\\\";\\n} || {\\n  DEFAULTNET=\\\"$(ip route show |grep -o 'default via [0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.*' |head -n1 |sed 's/proto.*\\\\|onlink.*//g' |awk '{print $NF}')\\\";\\n  [[ -n \\\"$DEFAULTNET\\\" ]] && IPSUB=\\\"$(ip addr |grep ''${DEFAULTNET}'' |grep 'global' |grep 'brd' |head -n1 |grep -o '[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}/[0-9]\\\\{1,2\\\\}')\\\";\\n  IPv4=\\\"$(echo -n \\\"$IPSUB\\\" |cut -d'/' -f1)\\\";\\n  NETSUB=\\\"$(echo -n \\\"$IPSUB\\\" |grep -o '/[0-9]\\\\{1,2\\\\}')\\\";\\n  GATE=\\\"$(ip route show |grep -o 'default via [0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}' |head -n1 |grep -o '[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}')\\\";\\n  [[ -n \\\"$NETSUB\\\" ]] && MASK=\\\"$(echo -n '128.0.0.0/1,192.0.0.0/2,224.0.0.0/3,240.0.0.0/4,248.0.0.0/5,252.0.0.0/6,254.0.0.0/7,255.0.0.0/8,255.128.0.0/9,255.192.0.0/10,255.224.0.0/11,255.240.0.0/12,255.248.0.0/13,255.252.0.0/14,255.254.0.0/15,255.255.0.0/16,255.255.128.0/17,255.255.192.0/18,255.255.224.0/19,255.255.240.0/20,255.255.248.0/21,255.255.252.0/22,255.255.254.0/23,255.255.255.0/24,255.255.255.128/25,255.255.255.192/26,255.255.255.224/27,255.255.255.240/28,255.255.255.248/29,255.255.255.252/30,255.255.255.254/31,255.255.255.255/32' |grep -o '[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}'${NETSUB}'' |cut -d'/' -f1)\\\";\\n}\\n\\n[[ -n \\\"$GATE\\\" ]] && [[ -n \\\"$MASK\\\" ]] && [[ -n \\\"$IPv4\\\" ]] || {\\n  echo \\\"Not found \\\\`ip command\\\\`, It will use \\\\`route command\\\\`.\\\"\\n\\n  ipNum() {\\n    local IFS='.';\\n    read ip1 ip2 ip3 ip4 <<<\\\"$1\\\";\\n    echo $((ip1*(1<<24)+ip2*(1<<16)+ip3*(1<<8)+ip4));\\n  }\\n\\n  SelectMax(){\\n  ii=0;\\n  for IPITEM in `route -n |awk -v OUT=$1 '{print $OUT}' |grep '[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}'`\\n    do\\n      NumTMP=\\\"$(ipNum $IPITEM)\\\";\\n      eval \\\"arrayNum[$ii]='$NumTMP,$IPITEM'\\\";\\n      ii=$[$ii+1];\\n    done\\n  echo ${arrayNum[@]} |sed 's/\\\\s/\\\\n/g' |sort -n -k 1 -t ',' |tail -n1 |cut -d',' -f2;\\n  }\\n\\n  [[ -z $IPv4 ]] && IPv4=\\\"$(ifconfig |grep 'Bcast' |head -n1 |grep -o '[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}.[0-9]\\\\{1,3\\\\}' |head -n1)\\\";\\n  [[ -z $GATE ]] && GATE=\\\"$(SelectMax 2)\\\";\\n  [[ -z $MASK ]] && MASK=\\\"$(SelectMax 3)\\\";\\n\\n  [[ -n \\\"$GATE\\\" ]] && [[ -n \\\"$MASK\\\" ]] && [[ -n \\\"$IPv4\\\" ]] || {\\n    echo \\\"Error! Not configure network. \\\";\\n    exit 1;\\n  }\\n}\\n\\n[[ \\\"$setNet\\\" != '1' ]] && [[ -f '/etc/network/interfaces' ]] && {\\n  [[ -z \\\"$(sed -n '/iface.*inet static/p' /etc/network/interfaces)\\\" ]] && AutoNet='1' || AutoNet='0';\\n  [[ -d /etc/network/interfaces.d ]] && {\\n    ICFGN=\\\"$(find /etc/network/interfaces.d -name '*.cfg' |wc -l)\\\" || ICFGN='0';\\n    [[ \\\"$ICFGN\\\" -ne '0' ]] && {\\n      for NetCFG in `ls -1 /etc/network/interfaces.d/*.cfg`\\n        do \\n          [[ -z \\\"$(cat $NetCFG | sed -n '/iface.*inet static/p')\\\" ]] && AutoNet='1' || AutoNet='0';\\n          [[ \\\"$AutoNet\\\" -eq '0' ]] && break;\\n        done\\n    }\\n  }\\n}\\n\\n[[ \\\"$setNet\\\" != '1' ]] && [[ -d '/etc/sysconfig/network-scripts' ]] && {\\n  ICFGN=\\\"$(find /etc/sysconfig/network-scripts -name 'ifcfg-*' |grep -v 'lo'|wc -l)\\\" || ICFGN='0';\\n  [[ \\\"$ICFGN\\\" -ne '0' ]] && {\\n    for NetCFG in `ls -1 /etc/sysconfig/network-scripts/ifcfg-* |grep -v 'lo$' |grep -v ':[0-9]\\\\{1,\\\\}'`\\n      do \\n        [[ -n \\\"$(cat $NetCFG | sed -n '/BOOTPROTO.*[dD][hH][cC][pP]/p')\\\" ]] && AutoNet='1' || {\\n          AutoNet='0' && . $NetCFG;\\n          [[ -n $NETMASK ]] && MASK=\\\"$NETMASK\\\";\\n          [[ -n $GATEWAY ]] && GATE=\\\"$GATEWAY\\\";\\n        }\\n        [[ \\\"$AutoNet\\\" -eq '0' ]] && break;\\n      done\\n  }\\n}\\n\\necho -e \\\"the loader\\\"\\n\\nLoaderMode='0'\\nsetInterfaceName='0'\\nsetIPv6='0'\\n\\nif [[ \\\"$LoaderMode\\\" == \\\"0\\\" ]]; then\\n  [[ -f '/boot/grub/grub.cfg' ]] && GRUBVER='0' && GRUBDIR='/boot/grub' && GRUBFILE='grub.cfg';\\n  [[ -z \\\"$GRUBDIR\\\" ]] && [[ -f '/boot/grub2/grub.cfg' ]] && GRUBVER='0' && GRUBDIR='/boot/grub2' && GRUBFILE='grub.cfg';\\n  [[ -z \\\"$GRUBDIR\\\" ]] && [[ -f '/boot/grub/grub.conf' ]] && GRUBVER='1' && GRUBDIR='/boot/grub' && GRUBFILE='grub.conf';\\n  [ -z \\\"$GRUBDIR\\\" -o -z \\\"$GRUBFILE\\\" ] && echo -ne \\\"Error! \\\\nNot Found grub.\\\\n\\\" && exit 1;\\nelse\\n  tmpINSTANTWITHOUTVNC='0'\\nfi\\n\\nif [[ \\\"$LoaderMode\\\" == \\\"0\\\" ]]; then\\n  [[ ! -f $GRUBDIR/$GRUBFILE ]] && echo \\\"Error! Not Found $GRUBFILE. \\\" && exit 1;\\n\\n  [[ ! -f $GRUBDIR/$GRUBFILE.old ]] && [[ -f $GRUBDIR/$GRUBFILE.bak ]] && mv -f $GRUBDIR/$GRUBFILE.bak $GRUBDIR/$GRUBFILE.old;\\n  mv -f $GRUBDIR/$GRUBFILE $GRUBDIR/$GRUBFILE.bak;\\n  [[ -f $GRUBDIR/$GRUBFILE.old ]] && cat $GRUBDIR/$GRUBFILE.old >$GRUBDIR/$GRUBFILE || cat $GRUBDIR/$GRUBFILE.bak >$GRUBDIR/$GRUBFILE;\\nelse\\n  GRUBVER='2'\\nfi\\n\\n\\n[[ \\\"$GRUBVER\\\" == '0' ]] && {\\n  READGRUB='/tmp/grub.read'\\n  cat $GRUBDIR/$GRUBFILE |sed -n '1h;1!H;$g;s/\\\\n/%%%%%%%/g;$p' |grep -om 1 'menuentry\\\\ [^{]*{[^}]*}%%%%%%%' |sed 's/%%%%%%%/\\\\n/g' >$READGRUB\\n  LoadNum=\\\"$(cat $READGRUB |grep -c 'menuentry ')\\\"\\n  if [[ \\\"$LoadNum\\\" -eq '1' ]]; then\\n    cat $READGRUB |sed '/^$/d' >/tmp/grub.new;\\n  elif [[ \\\"$LoadNum\\\" -gt '1' ]]; then\\n    CFG0=\\\"$(awk '/menuentry /{print NR}' $READGRUB|head -n 1)\\\";\\n    CFG2=\\\"$(awk '/menuentry /{print NR}' $READGRUB|head -n 2 |tail -n 1)\\\";\\n    CFG1=\\\"\\\";\\n    for tmpCFG in `awk '/}/{print NR}' $READGRUB`\\n      do\\n        [ \\\"$tmpCFG\\\" -gt \\\"$CFG0\\\" -a \\\"$tmpCFG\\\" -lt \\\"$CFG2\\\" ] && CFG1=\\\"$tmpCFG\\\";\\n      done\\n    [[ -z \\\"$CFG1\\\" ]] && {\\n      echo \\\"Error! read $GRUBFILE. \\\";\\n      exit 1;\\n    }\\n\\n    sed -n \\\"$CFG0,$CFG1\\\"p $READGRUB >/tmp/grub.new;\\n    [[ -f /tmp/grub.new ]] && [[ \\\"$(grep -c '{' /tmp/grub.new)\\\" -eq \\\"$(grep -c '}' /tmp/grub.new)\\\" ]] || {\\n      echo -ne \\\"\\\\033[31mError! \\\\033[0mNot configure $GRUBFILE. \\\\n\\\";\\n      exit 1;\\n    }\\n  fi\\n  [ ! -f /tmp/grub.new ] && echo \\\"Error! $GRUBFILE. \\\" && exit 1;\\n  sed -i \\\"/menuentry.*/c\\\\menuentry\\\\ \\\\'Packer PE \\\\[debian\\\\ jessie\\\\ amd64\\\\]\\\\'\\\\ --class debian\\\\ --class\\\\ gnu-linux\\\\ --class\\\\ gnu\\\\ --class\\\\ os\\\\ \\\\{\\\" /tmp/grub.new\\n  sed -i \\\"/echo.*Loading/d\\\" /tmp/grub.new;\\n  INSERTGRUB=\\\"$(awk '/menuentry /{print NR}' $GRUBDIR/$GRUBFILE|head -n 1)\\\"\\n}\\n\\n[[ \\\"$GRUBVER\\\" == '1' ]] && {\\n  CFG0=\\\"$(awk '/title[\\\\ ]|title[\\\\t]/{print NR}' $GRUBDIR/$GRUBFILE|head -n 1)\\\";\\n  CFG1=\\\"$(awk '/title[\\\\ ]|title[\\\\t]/{print NR}' $GRUBDIR/$GRUBFILE|head -n 2 |tail -n 1)\\\";\\n  [[ -n $CFG0 ]] && [ -z $CFG1 -o $CFG1 == $CFG0 ] && sed -n \\\"$CFG0,$\\\"p $GRUBDIR/$GRUBFILE >/tmp/grub.new;\\n  [[ -n $CFG0 ]] && [ -z $CFG1 -o $CFG1 != $CFG0 ] && sed -n \\\"$CFG0,$[$CFG1-1]\\\"p $GRUBDIR/$GRUBFILE >/tmp/grub.new;\\n  [[ ! -f /tmp/grub.new ]] && echo \\\"Error! configure append $GRUBFILE. \\\" && exit 1;\\n  sed -i \\\"/title.*/c\\\\title\\\\ \\\\'DebianNetboot \\\\[jessie\\\\ amd64\\\\]\\\\'\\\" /tmp/grub.new;\\n  sed -i '/^#/d' /tmp/grub.new;\\n  INSERTGRUB=\\\"$(awk '/title[\\\\ ]|title[\\\\t]/{print NR}' $GRUBDIR/$GRUBFILE|head -n 1)\\\"\\n}\\n\\nif [[ \\\"$LoaderMode\\\" == \\\"0\\\" ]]; then\\n  [[ -n \\\"$(grep 'linux.*/\\\\|kernel.*/' /tmp/grub.new |awk '{print $2}' |tail -n 1 |grep '^/boot/')\\\" ]] && Type='InBoot' || Type='NoBoot';\\n\\n  LinuxKernel=\\\"$(grep 'linux.*/\\\\|kernel.*/' /tmp/grub.new |awk '{print $1}' |head -n 1)\\\";\\n  [[ -z \\\"$LinuxKernel\\\" ]] && echo \\\"Error! read grub config! \\\" && exit 1;\\n  LinuxIMG=\\\"$(grep 'initrd.*/' /tmp/grub.new |awk '{print $1}' |tail -n 1)\\\";\\n  [ -z \\\"$LinuxIMG\\\" ] && sed -i \\\"/$LinuxKernel.*\\\\//a\\\\\\\\\\\\tinitrd\\\\ \\\\/\\\" /tmp/grub.new && LinuxIMG='initrd';\\n\\n  if [[ \\\"$setInterfaceName\\\" == \\\"1\\\" ]]; then\\n    Add_OPTION=\\\"net.ifnames=0 biosdevname=0\\\";\\n  else\\n    Add_OPTION=\\\"\\\";\\n  fi\\n\\n  if [[ \\\"$setIPv6\\\" == \\\"1\\\" ]]; then\\n    Add_OPTION=\\\"$Add_OPTION ipv6.disable=1\\\";\\n  fi\\n\\n  BOOT_OPTION=\\\"auto=true $Add_OPTION hostname=debian domain= -- quiet\\\"\\n\\n  [[ \\\"$Type\\\" == 'InBoot' ]] && {\\n    sed -i \\\"/$LinuxKernel.*\\\\//c\\\\\\\\\\\\t$LinuxKernel\\\\\\\\t\\\\/boot\\\\/vmlinuz $BOOT_OPTION\\\" /tmp/grub.new;\\n    sed -i \\\"/$LinuxIMG.*\\\\//c\\\\\\\\\\\\t$LinuxIMG\\\\\\\\t\\\\/boot\\\\/initrd.img\\\" /tmp/grub.new;\\n  }\\n\\n  [[ \\\"$Type\\\" == 'NoBoot' ]] && {\\n    sed -i \\\"/$LinuxKernel.*\\\\//c\\\\\\\\\\\\t$LinuxKernel\\\\\\\\t\\\\/vmlinuz $BOOT_OPTION\\\" /tmp/grub.new;\\n    sed -i \\\"/$LinuxIMG.*\\\\//c\\\\\\\\\\\\t$LinuxIMG\\\\\\\\t\\\\/initrd.img\\\" /tmp/grub.new;\\n  }\\n\\n  sed -i '$a\\\\\\\\n' /tmp/grub.new;\\nfi\\n\\n[[ \\\"$tmpINSTANTWITHOUTVNC\\\" == '0' ]] && {\\n  GRUBPATCH='0';\\n\\n  if [[ \\\"$LoaderMode\\\" == \\\"0\\\" ]]; then\\n  [ -f '/etc/network/interfaces' -o -d '/etc/sysconfig/network-scripts' ] || {\\n    echo \\\"Error, Not found interfaces config.\\\";\\n    exit 1;\\n  }\\n\\n  sed -i ''${INSERTGRUB}'i\\\\\\\\n' $GRUBDIR/$GRUBFILE;\\n  sed -i ''${INSERTGRUB}'r /tmp/grub.new' $GRUBDIR/$GRUBFILE;\\n  [[ -f  $GRUBDIR/grubenv ]] && sed -i 's/saved_entry/#saved_entry/g' $GRUBDIR/grubenv;\\n  fi\\n\\n  cd /tmp/boot;\\n  COMPTYPE=\\\"gzip\\\";\\n  CompDected='0'\\n  for ListCOMP in `echo -en 'gzip\\\\nlzma\\\\nxz'`\\n    do\\n      if [[ \\\"$COMPTYPE\\\" == \\\"$ListCOMP\\\" ]]; then\\n        CompDected='1'\\n        if [[ \\\"$COMPTYPE\\\" == 'gzip' ]]; then\\n          NewIMG=\\\"initrd.img.gz\\\"\\n        else\\n          NewIMG=\\\"initrd.img.$COMPTYPE\\\"\\n        fi\\n        mv -f \\\"/boot/initrd.img\\\" \\\"/tmp/$NewIMG\\\"\\n        break;\\n      fi\\n    done\\n  [[ \\\"$CompDected\\\" != '1' ]] && echo \\\"Detect compressed type not support.\\\" && exit 1;\\n  [[ \\\"$COMPTYPE\\\" == 'lzma' ]] && UNCOMP='xz --format=lzma --decompress';\\n  [[ \\\"$COMPTYPE\\\" == 'xz' ]] && UNCOMP='xz --decompress';\\n  [[ \\\"$COMPTYPE\\\" == 'gzip' ]] && UNCOMP='gzip -d';\\n\\n  $UNCOMP < /tmp/$NewIMG | cpio --extract --verbose --make-directories --no-absolute-filenames >>/dev/null 2>&1\\n\\n  echo -e \\\"the preseed\\\"\\n\\n  [[ \\\"$UNZIP\\\" == '0' ]] && PIPECMDSTR='wget2 --no-check-certificate -qO- '$DDURL' |dd of=$(list-devices disk |head -n1)';\\n  [[ \\\"$UNZIP\\\" == '1' ]] && PIPECMDSTR='wget2 --no-check-certificate -qO- '$DDURL' |tar zOx |dd of=$(list-devices disk |head -n1)';\\n  [[ \\\"$UNZIP\\\" == '2' ]] && PIPECMDSTR='wget2 --no-check-certificate -qO- '$DDURL' |gzip -dc |dd of=$(list-devices disk |head -n1)';\\n\\ncat >/tmp/boot/preseed.cfg<<EOF\\nd-i preseed/early_command string anna-install\\n\\nd-i debian-installer/locale string en_US\\nd-i console-setup/layoutcode string us\\n\\nd-i keyboard-configuration/xkb-keymap string us\\n\\nd-i hw-detect/load_firmware boolean true\\n\\nd-i netcfg/choose_interface select $IFETH\\nd-i netcfg/disable_autoconfig boolean true\\nd-i netcfg/dhcp_failed note\\nd-i netcfg/dhcp_options select Configure network manually\\n# d-i netcfg/get_ipaddress string $ipAddr\\nd-i netcfg/get_ipaddress string $IPv4\\nd-i netcfg/get_netmask string $MASK\\nd-i netcfg/get_gateway string $GATE\\nd-i netcfg/get_nameservers string 8.8.8.8\\nd-i netcfg/no_default_route boolean true\\nd-i netcfg/confirm_static boolean true\\n\\nd-i mirror/country string manual\\n#d-i mirror/http/hostname string $IPv4\\nd-i mirror/http/hostname string httpredir.debian.org\\nd-i mirror/http/directory string /debian\\nd-i mirror/http/proxy string\\n\\n# webfsd -i $IPv4 -p 80 -r /var/log/ -l /var/log/httpd.log\\n\\nd-i apt-setup/services-select multiselect\\nd-i debian-installer/allow_unauthenticated boolean true\\n\\nd-i passwd/root-login boolean ture\\nd-i passwd/make-user boolean false\\nd-i passwd/root-password-crypted password $myPASSWORD\\nd-i user-setup/allow-password-weak boolean true\\nd-i user-setup/encrypt-home boolean false\\n\\nd-i clock-setup/utc boolean true\\nd-i time/zone string US/Eastern\\nd-i clock-setup/ntp boolean true\\n\\nd-i partman/early_command string $PIPECMDSTR; /sbin/reboot\\nEOF\\n\\n  [[ \\\"$LoaderMode\\\" != \\\"0\\\" ]] && AutoNet='1'\\n\\n  [[ \\\"$setNet\\\" == '0' ]] && [[ \\\"$AutoNet\\\" == '1' ]] && {\\n    sed -i '/netcfg\\\\/disable_autoconfig/d' /tmp/boot/preseed.cfg\\n    sed -i '/netcfg\\\\/dhcp_options/d' /tmp/boot/preseed.cfg\\n    sed -i '/netcfg\\\\/get_.*/d' /tmp/boot/preseed.cfg\\n    sed -i '/netcfg\\\\/confirm_static/d' /tmp/boot/preseed.cfg\\n  }\\n\\n  #[[ \\\"$GRUBPATCH\\\" == '1' ]] && {\\n  #  sed -i 's/^d-i\\\\ grub-installer\\\\/bootdev\\\\ string\\\\ default//g' /tmp/boot/preseed.cfg\\n  #}\\n  #[[ \\\"$GRUBPATCH\\\" == '0' ]] && {\\n  #  sed -i 's/debconf-set\\\\ grub-installer\\\\/bootdev.*\\\\\\\"\\\\;//g' /tmp/boot/preseed.cfg\\n  #}\\n\\n  sed -i '/user-setup\\\\/allow-password-weak/d' /tmp/boot/preseed.cfg\\n  sed -i '/user-setup\\\\/encrypt-home/d' /tmp/boot/preseed.cfg\\n  #sed -i '/pkgsel\\\\/update-policy/d' /tmp/boot/preseed.cfg\\n  #sed -i 's/umount\\\\ \\\\/media.*true\\\\;\\\\ //g' /tmp/boot/preseed.cfg\\n\\n  [[ -f '/boot/firmware.cpio.gz' ]] && {\\n    gzip -d < /boot/firmware.cpio.gz | cpio --extract --verbose --make-directories --no-absolute-filenames >>/dev/null 2>&1\\n  }\\n\")), mdx(\"p\", null, \"\\u6CE8\\u610F\\u4E0A\\u9762\\u7684\\u811A\\u672C\\u4E2D\\u8F93\\u51FA\\u81F3preseed file\\u81F3EOF\\u6B62\\u7684\\u5185\\u5BB9\\u5FC5\\u987B\\u9876\\u683C\\u5199\\uFF0CKs.cf\\u662Finstallment.sh\\u7528\\u6765\\u7528\\u540C\\u6837ubuntu\\u652F\\u6301preseed\\u652F\\u6301centos\\u7684\\u65B9\\u6CD5\\u3002\\u5DF2\\u5220\\uFF0C\\u5728\\u6587\\u4EF6\\u4E2D\\uFF0C\\u6211\\u6CE8\\u91CA\\u4E86\\u539F\\u6765\\u4F7F\\u7528\\u5185\\u7F6E\\u7684webfsd\\u670D\\u52A1\\u5668\\u4F5C\\u955C\\u50CF\\u7684\\u65B9\\u6848\\uFF0C\\u56E0\\u4E3Apreseed early command string\\u4E2D\\u6B20\\u5165webfsd\\u542F\\u52A8\\u547D\\u4EE4\\uFF08\\u653Eanna install\\u524D\\uFF09\\uFF0C\\u4F1A\\u5BFC\\u81F4PE\\u542F\\u52A8\\u65F6early command\\u8FD0\\u884C\\u65F6\\uFF0Cumount\\u65F6\\u524D\\u53F0\\u5374\\u5728\\u52A0\\u8F7Dwebfsd\\u5361\\u4F4F\\uFF0C\\u9700\\u8981ctrlc\\u624D\\u80FD\\u7EE7\\u7EED\\uFF0C\\u4F46\\u5B9E\\u9645\\u4E0Awebfsd\\u5DF2\\u6210\\u529F\\u8FD0\\u884C\\u3002\"), mdx(\"p\", null, \"\\u6240\\u4EE5\\u6211\\u5C06\\u6CE8\\u91CAwebfsd\\u7684\\u903B\\u8F91\\u653E\\u5728preseed\\u4E2D\\u67D0\\u4F4D\\u7F6E\\uFF0C\\u8FD9\\u4E2A\\u4F4D\\u7F6E\\u662F\\u5B83\\u5E94\\u8BE5\\u542F\\u52A8\\u65F6\\u7684\\u65F6\\u673A\\u3002\\u5B9E\\u9645\\u4E0Aearly command string\\u4E2D\\u90FD\\u4E0D\\u6BD4\\u5B83\\u5408\\u9002\\u3002\\u672A\\u6765\\u60F3\\u529E\\u6CD5\\u8BA9\\u5B83\\u4EE5\\u6B63\\u786E\\u65B9\\u5F0F\\u8D77\\u4F5C\\u7528\\u3002\"), mdx(\"h2\", null, \"\\u6253\\u5305\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"  sleep 5s\\n\\n  echo -e \\\"\\\\n\\\\033[36m# Packaging \\\\033[0m\\\\n\\\"\\n\\n  find . | cpio -H newc --create --quiet | gzip -9 > /boot/initrd.img;\\n  [[ \\\"$tmpINSTANTWITHOUTVNC\\\" == '0' ]] &&  echo \\\"finished, auto reboot after 30s...(if needed, you can press ctrl c to interrupt to bak the /boot/initrd.img, then manually reboot to continue)\\\";sleep 30s\\n\\n  rm -rf /tmp/boot;\\n\\n}\\n\\n[[ \\\"$tmpINSTANTWITHOUTVNC\\\" == '1' ]] && {\\n  sed -i '$i\\\\\\\\n' $GRUBDIR/$GRUBFILE\\n  sed -i '$r /tmp/grub.new' $GRUBDIR/$GRUBFILE\\n  echo -e \\\"\\\\n\\\\033[33m\\\\033[04mIt will reboot! \\\\nPlease connect VNC! \\\\nSelect\\\\033[0m\\\\033[32m Packer PE [debian jessie amd64] \\\\033[33m\\\\033[4mto install system.\\\\033[04m\\\\n\\\\n\\\\033[31m\\\\033[04mThere is some information for you.\\\\nDO NOT CLOSE THE WINDOW! \\\\033[0m\\\\n\\\"\\n  echo -e \\\"\\\\033[35mIPv4\\\\t\\\\tNETMASK\\\\t\\\\tGATEWAY\\\\033[0m\\\"\\n  echo -e \\\"\\\\033[36m\\\\033[04m$IPv4\\\\033[0m\\\\t\\\\033[36m\\\\033[04m$MASK\\\\033[0m\\\\t\\\\033[36m\\\\033[04m$GATE\\\\033[0m\\\\n\\\\n\\\"\\n\\n  read -n 1 -p \\\"Press Enter to reboot...\\\" INP\\n  [[ \\\"$INP\\\" != '' ]] && echo -ne '\\\\b \\\\n\\\\n';\\n}\\n\\nchown root:root $GRUBDIR/$GRUBFILE\\nchmod 444 $GRUBDIR/$GRUBFILE\\n\\n\\nif [[ \\\"$LoaderMode\\\" == \\\"0\\\" ]]; then\\n  sleep 3 && reboot >/dev/null 2>&1\\nelse\\n  rm -rf \\\"$HOME/loader\\\"\\n  mkdir -p \\\"$HOME/loader\\\"\\n  cp -rf \\\"/boot/initrd.img\\\" \\\"$HOME/loader/initrd.img\\\"\\n  cp -rf \\\"/boot/vmlinuz\\\" \\\"$HOME/loader/vmlinuz\\\"\\n  [[ -f \\\"/boot/initrd.img\\\" ]] && rm -rf \\\"/boot/initrd.img\\\"\\n  [[ -f \\\"/boot/vmlinuz\\\" ]] && rm -rf \\\"/boot/vmlinuz\\\"\\n  echo && ls -AR1 \\\"$HOME/loader\\\"\\nfi\\n\")), mdx(\"p\", null, \"\\u811A\\u672C\\u7ED3\\u675F\\u3002\"), mdx(\"p\", null, \"\\u2014\\u2014\"), mdx(\"p\", null, \"\\u8FD9\\u4E2A\\u811A\\u672C\\u8FD8\\u6709\\u5176\\u5B83\\u5F88\\u591A\\u9700\\u8981\\u589E\\u5F3A\\u7684\\u5730\\u65B9\\uFF0C\\u6BD4\\u5982dd progress\\u663E\\u793A\\u3002\\u8FD8\\u6BD4\\u5982\\u6539\\u6210\\u4E86\\u751F\\u6210\\u53CC\\u5206\\u533A\\u3002\\u4FDD\\u7559packerpe\\u5230\\u7B2C\\u4E00\\u5206\\u533A\\u3002\\u6574\\u76D8\\u5176\\u5B9E\\u53EF\\u4EE5preseed/partman\\u6210\\u4E8C\\u4E2A\\u5206\\u533A\\uFF0C\\u4E00\\u4E2A\\u5206\\u533A200M\\u653E\\u751F\\u6210\\u7684packerpe\\u81EA\\u8EAB\\uFF08\\u672A\\u6765\\uFF0C\\u8FD8\\u53EF\\u4EE5\\u5728\\u8FD9\\u4E2Apackerpe\\u96C6\\u6210dbcolinux\\u6216\\u96C6\\u6210linuxbpot,coreboot\\uFF0Cclover\\u7B49\\uFF09\\uFF0C\"), mdx(\"p\", null, \"\\u8FD8\\u6BD4\\u5982\\uFF0C\\u6269\\u5C55\\u955C\\u50CF\\u5230\\u6574\\u4E2A\\u78C1\\u76D8\\u7A7A\\u95F4\\uFF0C\\u5B9E\\u9645\\u4E0Awindows\\u901A\\u8FC7ntfs fuse\\u662F\\u5B9E\\u73B0\\u4E86\\u7684\\u3002\\u5BF9\\u4E8Elinux\\u78C1\\u76D8\\uFF0C\\u8981\\u5904\\u7406\\u955C\\u50CF\\u5206\\u533A\\u8868\\u9002\\u914D\\u5230\\u76EE\\u6807\\u6574\\u4E2A\\u78C1\\u76D8\\u3002\\u8FD9\\u4E0D\\u5149\\u9002\\u7528\\u4E8Edd\\u65B9\\u6848\\u3002\\u4E5F\\u9002\\u7528\\u4E8E\\u5C06\\u78C1\\u76D8\\u6253\\u5305\\u6210dd\\u955C\\u50CF\\uFF08\\u811A\\u672C\\u4E2D\\u6539\\u53D8pipecmdstr\\uFF0C\\u955C\\u50CF\\u6269\\u5BB9\\u7F29\\u5BB9\\uFF09\\u3002\\u7136\\u540Enc \\u76D1\\u542C\\uFF0C\\u4F9B\\u5176\\u5B83\\u673A\\u5668\\u4E0B\\u8F7D\\u5176\\u955C\\u50CF\\u6216\\u76F4\\u63A5dd\\u3002\\u8FD9\\u662F\\u8FD9\\u4E2A\\u811A\\u672C\\u7684\\u53CD\\u5411\\u529F\\u80FD\\u3002\"), mdx(\"p\", null, \"\\u8FD8\\u6BD4\\u5982\\uFF0C\\u5229\\u7528webfsd\\u7684cgi\\u6539dd\\u5730\\u5740\\u3002\\u4E5F\\u53EF\\u7528grub\\u7684auto url\\u53D8\\u6362dd\\u5730\\u5740\\u3002Ddurl\\u53C2\\u6570\\u4FDD\\u7559\\u5230\\u4E0B\\u4E00\\u6B21\\u3002\\u4E14\\u8BFB\\u53D6\\u4F4D\\u7F6E\\u4E0D\\u518D\\u5728preseed\\u4E2D\\u3002\"), mdx(\"p\", null, \"\\u4F46\\u662F\\u6211\\u4E0D\\u60F3\\u505A\\u4E86\\uFF0C\\u4EE5\\u540E\\u7EE7\\u7EED\\u5427\\u3002\\u8FD9\\u4E9B\\u5929\\u505Awindows server 2019 core\\u7684dd\\u955C\\u50CF\\u4E5F\\u8F83\\u7D2F\\u4E86\\uFF0C\\u7528\\u4E86\\u8DDF\\u505Aosx\\u4E91\\u955C\\u50CF\\u5DEE\\u4E0D\\u591A\\u7684\\u65B9\\u6CD5\\uFF1A\\u5728linuxkvm\\u4E2D\\u5957\\u865A\\u62DF\\u673A\\u3002\"), mdx(\"hr\", null), mdx(\"p\", null, \"(\\u6B64\\u5904\\u4E0D\\u8BBE\\u56DE\\u590D\\uFF0C\\u626B\\u7801\\u5230\\u5FAE\\u4FE1\\u53C2\\u4E0E\\u7559\\u8A00\\uFF0C\\u6216\\u76F4\\u63A5\\u70B9\\u51FB\\u5230\\u539F\\u6587)\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/p/106822324/qrcode.png\",\n    \"alt\": null\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#把di当online-packer用利用installnet制作一个云装机packerpe2","title":"把DI当online packer用:利用installnet制作一个云装机packerpe（2）","items":[{"url":"#给前面的脚本增加和镜像格式判断统一wget和dd-progress","title":"给前面的脚本增加和镜像格式判断，统一wget和dd progress"},{"url":"#整合精简几大件the-net-the-loader-the-preseed-file","title":"整合精简几大件,the net, the loader, the preseed file"},{"url":"#打包","title":"打包"}]}]},"parent":{"relativePath":"minlearnprogramming/1keydddev/installnetbuildpackerpe(2).md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/minlearnprogramming","title":"minlearnprogramming"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev","title":"1keydddev"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications","title":"applications"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages","title":"languages"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware","title":"middleware"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev","title":"myclouddev"}}},{"node":{"fields":{"slug":"/minlearnprogramming/others","title":"others"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms","title":"platforms"}}},{"node":{"fields":{"slug":"/minlearnprogramming/toc","title":"Toc"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/aliyunecsinstcustwiniso","title":"aliyunecsinstcustwiniso"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/buildkitascdcitoqcloudcloudbasedeg","title":"buildkitascdcitoqcloudcloudbasedeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/colinuxbasedcrolinwinfs","title":"colinuxbasedcrolinwinfs"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/dsmasdeepinmateofflinetpl(3)","title":"dsmasdeepinmateofflinetpl(3)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/dsmasdeepinmatesinglepartskynas(2)","title":"dsmasdeepinmatesinglepartskynas(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/dsmasdeepinmateskynasasmate","title":"dsmasdeepinmateskynasasmate"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/dsmasdeepinmatesnippter(2)","title":"dsmasdeepinmatesnippter(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/installnetbuildpackerpe(1)","title":"installnetbuildpackerpe(1)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/installnetbuildpackerpe(2)","title":"installnetbuildpackerpe(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/insthdtinycolinuxonvps","title":"insthdtinycolinuxonvps"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/nginxdockeraspaas(1)","title":"nginxdockeraspaas(1)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/nginxdockeraspaastheide(2)","title":"nginxdockeraspaastheide(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/normalsynothekernel","title":"normalsynothekernel"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/odpackerpebuilderunisetup","title":"odpackerpebuilderunisetup"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/openfaasonvpsbuildserverless","title":"openfaasonvpsbuildserverless"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/packerbuilddbcolinuxtpl(2)","title":"packerbuilddbcolinuxtpl(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/packerbuilddbcolinuxtpl(3)","title":"packerbuilddbcolinuxtpl(3)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/pebuildersetupdeepin20vps","title":"pebuildersetupdeepin20vps"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/pebuildersetupdsm615vps","title":"pebuildersetupdsm615vps"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setupchromeontinycolinux","title":"setupchromeontinycolinux"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setuposxonaliyunbasic","title":"setuposxonaliyunbasic"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setuposxonaliyuncatalina","title":"setuposxonaliyuncatalina"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setuposxonaliyunchamelon","title":"setuposxonaliyunchamelon"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setuposxonaliyuncloverpreboot","title":"setuposxonaliyuncloverpreboot"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setuposxonaliyundeg","title":"setuposxonaliyundeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setuposxonaliyundrvblacksreen","title":"setuposxonaliyundrvblacksreen"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setuposxonaliyunenhancepreboot","title":"setuposxonaliyunenhancepreboot"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setuposxonaliyungettpl","title":"setuposxonaliyungettpl"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/slipstreamvirtiotowin","title":"slipstreamvirtiotowin"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setuposxonaliyunrefs","title":"setuposxonaliyunrefs"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/synoasmineportalboxbasic(1)","title":"synoasmineportalboxbasic(1)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/synoasmineportalskynas(3)","title":"synoasmineportalskynas(3)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycolinux32setup64toolchain","title":"tinycolinux32setup64toolchain"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/synobootonbothhwvps","title":"synobootonbothhwvps"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycolinuxmakeappwtoolchain","title":"tinycolinuxmakeappwtoolchain"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycolinuxmakeapppkg","title":"tinycolinuxmakeapppkg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycolinuxmix3264rootfs","title":"tinycolinuxmix3264rootfs"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycolinuxwithvzpeseprootfs(1)","title":"tinycolinuxwithvzpeseprootfs(1)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycolinuxwithvzpeseprootfs(2)","title":"tinycolinuxwithvzpeseprootfs(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycolinuxwithvzpeseprootfs(3)","title":"tinycolinuxwithvzpeseprootfs(3)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycorelinuxremasterdebianinst","title":"tinycorelinuxremasterdebianinst"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycorechromeosvscode","title":"tinycorechromeosvscode"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycorelinuxsetuplxclxd(1)","title":"tinycorelinuxsetuplxclxd(1)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/tinycorelinuxsetuplxclxd(2)","title":"tinycorelinuxsetuplxclxd(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/uniundeadfwpebuilderdeg","title":"uniundeadfwpebuilderdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/unipkgmgrtinycorelinuxdocker","title":"unipkgmgrtinycorelinuxdocker"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/vmbaseddevopsdegcolinuxtpl","title":"vmbaseddevopsdegcolinuxtpl"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/virtiopecolinuxmultipart","title":"virtiopecolinuxmultipart"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/winpevritio","title":"winpevritio"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/vscodeopenfaastoqcloudcloudbase","title":"vscodeopenfaastoqcloudcloudbase"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/zerotomatecloudoslfs9view(2)","title":"zerotomatecloudoslfs9view(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/zeropeexternal","title":"zeropeexternal"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/zerotomatecloudoslfs9viewadv(3)","title":"zerotomatecloudoslfs9viewadv(3)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/aligdymulnicgate","title":"aligdymulnicgate"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/buildjupyterrootclingtinycore","title":"buildjupyterrootclingtinycore"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/buildodoo8tinycorelinux","title":"buildodoo8tinycorelinux"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/buildseafiletinycorelinux","title":"buildseafiletinycorelinux"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/cdetoescpcdev","title":"cdetoescpcdev"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/cozylightondbcolinux","title":"cozylightondbcolinux"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/dockerasengitordeg","title":"dockerasengitordeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/dsmdockerbuilddevops","title":"dsmdockerbuilddevops"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/dsmdockerinstellie","title":"dsmdockerinstellie"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/instdavrostinycorelinux","title":"instdavrostinycorelinux"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/dsmmpassnippterhost","title":"dsmmpassnippterhost"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/mineportal2asfullpersonalware","title":"mineportal2asfullpersonalware"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/mineportal2asnas","title":"mineportal2asnas"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/mineportalhabitsmanageolaccount","title":"mineportalhabitsmanageolaccount"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setuposxonaliyuntest","title":"setuposxonaliyuntest"}}},{"node":{"fields":{"slug":"/minlearnprogramming/1keydddev/setupqcloudpaipanelvps","title":"setupqcloudpaipanelvps"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/mineportalwpwithocstor","title":"mineportalwpwithocstor"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/openaccesscolinux","title":"openaccesscolinux"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/openerpaserpcmsonedeg","title":"openerpaserpcmsonedeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/openvtheuniaccess","title":"openvtheuniaccess"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/owncloudasmicroblognote","title":"owncloudasmicroblognote"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/setupvscodeonline","title":"setupvscodeonline"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/owncloudhoststaticsite","title":"owncloudhoststaticsite"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/thefreeweb3","title":"thefreeweb3"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/unimongodb","title":"unimongodb"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/v2rbasedonbro","title":"v2rbasedonbro"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/vonglobalaliwin","title":"vonglobalaliwin"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/xenappbuildclouddesktop","title":"xenappbuildclouddesktop"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/zerotowp2ocfileshare(1)","title":"zerotowp2ocfileshare(1)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/applications/zfsfornas","title":"zfsfornas"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/apiandtcpipbasewebdev","title":"apiandtcpipbasewebdev"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/busyboxdemoletdeg","title":"busyboxdemoletdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/buildhippyvmtinycorelinux","title":"buildhippyvmtinycorelinux"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/commonhistoryforlangsys","title":"commonhistoryforlangsys"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/commonhistoryforprac","title":"commonhistoryforprac"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/eletronandwebfrontelv","title":"eletronandwebfrontelv"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/elmlangvisualinbuilt","title":"elmlangvisualinbuilt"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/funcbasecmdlangdeg","title":"funcbasecmdlangdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/golangfocusonappdev","title":"golangfocusonappdev"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/nobindingterralangsysdeg","title":"nobindingterralangsysdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/minkernelnosyxlangdeg","title":"minkernelnosyxlangdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/qtclingabettercppandstdlib","title":"qtclingabettercppandstdlib"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/rcorezcoreaslearningmat","title":"rcorezcoreaslearningmat"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/rootclingthejit","title":"rootclingthejit"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/rootclingthepme","title":"rootclingthepme"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/terralangdualcoredeg","title":"terralangdualcoredeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/softwareisabstractness","title":"softwareisabstractness"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/terralangthebasics","title":"terralangthebasics"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/thewaysforlangsysmix","title":"thewaysforlangsysmix"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/terralangfitfordevops","title":"terralangfitfordevops"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/uniappdomainshelllangdeg","title":"uniappdomainshelllangdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/whyelmlang","title":"whyelmlang"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/whyrustlang","title":"whyrustlang"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/cloudwallontinycorelinux","title":"cloudwallontinycorelinux"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/cloudwallbuildurcentercloud","title":"cloudwallbuildurcentercloud"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/cloudwalluninavwebappstack","title":"cloudwalluninavwebappstack"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/dsmdockerbetterdevops","title":"dsmdockerbetterdevops"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/enginxcreatclusteriz","title":"enginxcreatclusteriz"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/enginxuniwebappstackdeg","title":"enginxuniwebappstackdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/goblin(1)","title":"goblin(1)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/engitoruniidedistappdeg","title":"engitoruniidedistappdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/goblinfullstackmixosdeg","title":"goblinfullstackmixosdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/highlymixfullosdeg","title":"highlymixfullosdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/jupyternativetoweb","title":"jupyternativetoweb"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/hyperkitdevopsvmman","title":"hyperkitdevopsvmman"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/matecloudandappstackdeg","title":"matecloudandappstackdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/paasonecreatdemobase","title":"paasonecreatdemobase"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/plan9distfromzero","title":"plan9distfromzero"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/paasonecreatdemodrivendev","title":"paasonecreatdemodrivendev"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/unilangrtandoskerneldeg","title":"unilangrtandoskerneldeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/unikernelappliancedevdeg","title":"unikernelappliancedevdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/middleware/usrosgaphallangdeg","title":"usrosgaphallangdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/devinnetdiskdeg","title":"devinnetdiskdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/fodionemanager(1)","title":"fodionemanager(1)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/protypeforpac","title":"protypeforpac"}}},{"node":{"fields":{"slug":"/minlearnprogramming/languages/pypynewlanggentoolset","title":"pypynewlanggentoolset"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/fodionemanager(2)","title":"fodionemanager(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/netdiskbasedosdeg","title":"netdiskbasedosdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/onedriveashosting","title":"onedriveashosting"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/openfaasonemanager(2)","title":"openfaasonemanager(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/openfaasonemanager","title":"openfaasonemanager"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/paideploystatic","title":"paideploystatic"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/tcbonemanager(2)","title":"tcbonemanager(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/uniwxminideg","title":"uniwxminideg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/wxmini(2)","title":"wxmini(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/myclouddev/wxmini(3)","title":"wxmini(3)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/others/kbewosql","title":"kbewosql"}}},{"node":{"fields":{"slug":"/minlearnprogramming/others/mbwin10imglayout","title":"mbwin10imglayout"}}},{"node":{"fields":{"slug":"/minlearnprogramming/others/monosys","title":"monosys"}}},{"node":{"fields":{"slug":"/minlearnprogramming/others/msyscuione","title":"msyscuione"}}},{"node":{"fields":{"slug":"/minlearnprogramming/others/roscanbeinst","title":"roscanbeinst"}}},{"node":{"fields":{"slug":"/minlearnprogramming/others/theory1stprac1st","title":"theory1stprac1st"}}},{"node":{"fields":{"slug":"/minlearnprogramming/others/unicrosscompile","title":"unicrosscompile"}}},{"node":{"fields":{"slug":"/minlearnprogramming/others/wpformonosys","title":"wpformonosys"}}},{"node":{"fields":{"slug":"/minlearnprogramming/others/wingbc","title":"wingbc"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/buildavatt(2)","title":"buildavatt(2)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/buildavatt(1)","title":"buildavatt(1)"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/colinuxtoreplacedocker","title":"colinuxtoreplacedocker"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/corebootunilocremotesetup","title":"corebootunilocremotesetup"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/diskbiosasappcontainer","title":"diskbiosasappcontainer"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/diskbiosasunivmman","title":"diskbiosasunivmman"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/linuxbootasuefideg","title":"linuxbootasuefideg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/mineportaldsmorqnap","title":"mineportaldsmorqnap"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/osxbaseasbootman","title":"osxbaseasbootman"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/osxsmartnavcloudmates","title":"osxsmartnavcloudmates"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/parabootefideg","title":"parabootefideg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/programmingpadtoecspcdev","title":"programmingpadtoecspcdev"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/ubttouchasdeepinpcmobmates","title":"ubttouchasdeepinpcmobmates"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/unirootfsandfirmwarebuildforhw","title":"unirootfsandfirmwarebuildforhw"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/uniusrosandhwlangsysdeg","title":"uniusrosandhwlangsysdeg"}}},{"node":{"fields":{"slug":"/minlearnprogramming/platforms/virtualbootasvmmanbootman","title":"virtualbootasvmmanbootman"}}}]}},"pageContext":{"id":"f2569a29-1754-55a5-ae77-5e82cf046b6d"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}